package cn.itcast.app;

import java.sql.Connection;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.apache.commons.dbutils.DbUtils;
import org.apache.commons.dbutils.QueryRunner;

import cn.itcast.tools.Mytools;

public class AccountService {
	public static boolean transferAccounts(double money,String fromCardid,String toCardid){
		Connection conn = null;
		try {
			conn = Mytools.getCurrentConnection();
			double money2 = AccountDao.creakBalance(conn, fromCardid);
			if( money2 <= money){
				System.out.println("余额不足");
				System.exit(0);
			}
			
			conn.setAutoCommit(false);
			int i = AccountDao.payMent(conn, money, fromCardid);
			int j = AccountDao.collection(conn, money, toCardid);
			
			if (i >= 1 && j >=1 ){
				conn.commit();
				return true;
			}
		} catch (Exception e) {
			try {
				DbUtils.rollbackAndClose(conn);
			} catch (SQLException e1) {
			}
			e.printStackTrace();
		}
		return false;
	}
	//写入日志
	public static boolean info(String fromCordid,double money,String toCordid){
		Connection  conn1 = null;
		try {
			conn1 = Mytools.getConnection();
			conn1.setAutoCommit(false);
			int row1 = AccountDao.putoutlog(conn1, fromCordid, money);
			int row2 = AccountDao.putoutlog(conn1, toCordid, money);
			if (row2 > 0 && row1 >0){
				conn1.commit();
				return true;
			}else{
				conn1.rollback();
			}
		} catch (Exception e) {
			try {
				conn1.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}

		}
		return false;
	}
	//更改利率
	public static boolean lilv(String fromCardid,String toCardid) {
		Connection conn = null;
		try {
			conn = Mytools.getConnection();
		} catch (Exception e2) {
			e2.printStackTrace();
		}
		try {
			conn.setAutoCommit(false);
			int row1 = AccountDao.lilv(conn, fromCardid);
			int row2 = AccountDao.lilv(conn, toCardid);
			if(row1 > 0 && row2 >0){
				conn.commit();
				return true;
			}
			
		} catch (SQLException e) {
			try {
				conn.rollback();
			} catch (SQLException e1) {
			}
			e.printStackTrace();
		}
		return false;
	}
}
